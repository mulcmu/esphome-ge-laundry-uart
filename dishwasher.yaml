substitutions:
  name: dishwasher
  upper_name: Dish Washer

esphome:
  name: ${name}
  
esp32:
  board: esp32dev
  framework:
    type: esp-idf
  
logger:
  baud_rate: 0

# Enable Home Assistant API
api:

ota:
  password: !secret esp_home_ota_pw
  platform: esphome
  
wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  
  # Optional manual IP
  manual_ip:
    static_ip: 192.168.0.193
    gateway: 192.168.0.9
    subnet: 255.255.255.0

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  #ap:
  #  ssid: ${upper_name} Fallback Hotspot
  #  password: !secret esp_home_captive_pw

#captive_portal:

# Sync time with Home Assistant.
time:
  - platform: homeassistant
    id: homeassistant_time

# #Half Duplex GEA2 Config
# uart:
#   id: uart_gea2
#   tx_pin: 
#     number: GPIO18
#     inverted: true
#   rx_pin: 
#     number: GPIO19
#     inverted: true
#   baud_rate: 19200
#   # debug:
#   #   direction: BOTH
#   #   after:
#   #       timeout: 50ms
#   #   sequence:
#   #     - lambda:  UARTDebug::log_hex(direction, bytes, ' ');

# Full Duplex GEA3 Config      
uart:
 - id: uart_gea3
   tx_pin: 
     number: GPIO17
     inverted: false
   rx_pin: 
     number: GPIO16
     inverted: false
   baud_rate: 230400
   debug:
     direction: BOTH
     after:
         timeout: 50ms
     sequence:
       - lambda:  UARTDebug::log_hex(direction, bytes, ' ');


external_components:
  - source: local_components

gea_adapter:  
  id: gea_adapter_ID
  uart_id: uart_gea3
  appliance: dishwasher
  destination: 0xC0

sensor:
  - platform: gea_adapter
    type: remaining_cycle_time
    name: ${upper_name} Time Remaining
    unit_of_measurement: min
    accuracy_decimals: 1
    icon: mdi:progress-clock
    erd: 0xD004
  - platform: gea_adapter
    type: delayed_start_time
    name: ${upper_name} Delayed Start
    unit_of_measurement: min
    accuracy_decimals: 0
    icon: mdi:progress-clock        
  - platform: uptime
    name: ${upper_name} Uptime
    entity_category: "diagnostic"
  - platform: wifi_signal
    name: ${upper_name} WiFi Signal
    update_interval: 60s
    entity_category: "diagnostic"    


text_sensor:
  - platform: gea_adapter
    type: state
    name: ${upper_name} State
    icon: mdi:washing-machine
  - platform: gea_adapter
    type: cycle    
    name: ${upper_name} Cycle
    icon: mdi:washing-machine
  - platform: gea_adapter
    type: sub_state    
    name: ${upper_name} SubState
    icon: mdi:washing-machine
  - platform: gea_adapter
    type: door
    name: ${upper_name} Door 
    icon: mdi:door
#   - platform: gea_adapter
#     type: soil_setting
#     name: ${upper_name} Soil Setting
#     icon: mdi:liquid-spot
#   - platform: gea_adapter
#     type: temp_setting
#     name: ${upper_name} Temp Setting
#     icon: mdi:thermometer
#   - platform: gea_adapter
#     type: spin_setting
#     name: ${upper_name} Spin Setting
#     icon: mdi:autorenew
  - platform: wifi_info
    ip_address:
      name: ${upper_name} IP
      entity_category: "diagnostic"
          

binary_sensor:
  - platform: gea_adapter
    type: rinse_aid
    name: ${upper_name} Rinse Aid
  - platform: gea_adapter
    type: flood
    name: ${upper_name} Flood
  - platform: gea_adapter
    type: complete
    name: ${upper_name} Cycle Complete
    icon: mdi:washing-machine
    erd: 0xD003

#  - platform: gpio
#    pin:
#      number: GPIO14
#      mode:
#        input: true
#        pullup: true
#      inverted: True        
#    id: push_button
#    filters:
#      - delayed_off: 10ms
#      - delayed_on: 10ms   
#    on_press:
#      then:
#        - output.turn_on: green_led      
#    on_release:
#      then:
#        - output.turn_off: green_led 
       
output:
  - platform: gpio
    pin: GPIO2
    id: onboard_led
    inverted: True
  - platform: gpio
    pin: GPIO13
    id: green_led
    inverted: false    

#turn on green led on at boot and back off when connected to wifi
interval:
  - interval: 1s
    then:
      if:
        condition:
          wifi.connected:
        then:
          - output.turn_on: green_led
        else:
          - output.turn_off: green_led
          
button:
  #HA button to restart.
  - platform: restart
    name: ${upper_name} Restart

    